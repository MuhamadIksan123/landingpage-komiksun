/* eslint-disable react/no-unescaped-entities */
/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import Button from '../../components/Button';
import CardKomikNoTitle from '../../components/CardKomikNoTitle';
import ListGroupKomik from '../../components/ListGroupKomik';
import Footer from '../../components/Footer';
import Navbar from '../../components/Navbar';
import { getData } from '../../utils/fetchData';
import moment from 'moment';
import { formatDate } from '../../utils/formatDate';
import Cookies from 'js-cookie';
import { Card, Col, Container, ListGroup, Row } from 'react-bootstrap';
import SearchInput from '../../components/SearchInput';
import SelectBox from '../../components/SelectBox';

export default function DetailPage({ detailPage, dataKomik, id }) {
  const [dataKomikFilter, setDataKomikFilter] = useState(dataKomik);
  const [nameFilter, setNameFilter] = useState('');
  const [genreFilter, setGenreFilter] = useState(null);
  const [statusFilter, setStatusFilter] = useState(null);
  const [isCardVisible, setIsCardVisible] = useState(true);


  useEffect(() => {
    setDataKomikFilter(
      dataKomikFilter.filter((item) => item.vendor._id === id)
    );
  }, []);

   const handleCardClick = () => {
     setIsCardVisible(true);
   };

   const handleListClick = () => {
     setIsCardVisible(false);
   };

  return (
    <>
      <Head>
        <title>Semina || Detail Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      <section>
        <div className="container">
          <div className="row my-3">
            <div className="col-lg-6 col-12 justify-content-center align-items-center">
              <img
                src={`${process.env.NEXT_PUBLIC_API}/${detailPage?.image?.nama}`}
                alt="semina"
                className="img-responsive"
              />
            </div>
            <div className="col-lg-6 col-12 mt-4">
              <div className="d-flex flex-column">
                <div>
                  <div className="sub-title">
                    <span className="text-gradient-pink">Profile</span>
                  </div>
                  <div className="title">{detailPage.nama}</div>
                </div>
                <ListGroup variant="flush" className="mt-2">
                  <ListGroup.Item>
                    <b>Email:</b> {detailPage.email}
                  </ListGroup.Item>
                  <ListGroup.Item>
                    <b>No Handphone:</b> {detailPage.nomor}
                  </ListGroup.Item>
                  <ListGroup.Item>
                    <b>Role:</b> {detailPage.role}
                  </ListGroup.Item>
                  <ListGroup.Item>
                    <b>Status: </b>
                    {detailPage.status}
                  </ListGroup.Item>
                  <ListGroup.Item>
                    <b>Deskripsi: </b> <br />I am a Web Developer. I have a
                    decent proficiency in using Javascript, HTML, Cascading
                    Style Sheets (CSS), React, NextJS, MongoDB, and ExpressJs.
                    However, I don't limit myself to learning new skills. I have
                    a strong interest in pursuing a job in the field of
                    programming because it is my passion.
                  </ListGroup.Item>
                </ListGroup>
              </div>
            </div>
          </div>
          <div className="row ">
            <div className="col-md-6 d-grid gap-2 my-1">
              <Button variant="btn-green" action={handleCardClick}>
                Search
              </Button>
            </div>
            <div className="col-md-6 d-grid gap-2 my-1">
              <Button variant="btn-green" action={handleListClick}>
                All Produk
              </Button>
            </div>
          </div>
        </div>
      </section>
      <Container className="mt-4">
        <div className="row row-cols-lg-8 row-cols-md-1 row-cols-1 justify-content-lg-center">
          <Col>
            <SearchInput
              className="form-search"
              name="keyword"
              handleChange={(e) => setNameFilter(e.target.value)}
            />
          </Col>
        </div>
        <div className="row row-cols-lg-8 row-cols-md-2 row-cols-1 justify-content-lg-center">
          <Col>
            <SelectBox
              className="form-search"
              placeholder={'Pilih genre'}
              name="genre"
              value={genreFilter}
              // options={_temp}
              isClearable={true}
              handleChange={(e) => setGenreFilter(e)}
            />
          </Col>
          <Col>
            <SelectBox
              className="form-search"
              placeholder={'Pilih status'}
              name="status"
              value={statusFilter}
              // options={stat}
              isClearable={true}
              handleChange={(e) => setStatusFilter(e)}
            />
          </Col>
        </div>
      </Container>

      {isCardVisible ? (
        <CardKomikNoTitle data={dataKomikFilter} />
      ) : (
        <ListGroupKomik data={dataKomikFilter} />
      )}

      <Footer />
    </>
  );
}

export async function getServerSideProps(context) {
  const reqProfile = await getData(`api/v1/vendor/${context.params.id}`);
  const resProfile = reqProfile.data;

  const reqKomik = await getData(`api/v1/komik`);
  const resKomik = reqKomik.data;

  return {
    props: {
      detailPage: resProfile,
      dataKomik: resKomik,
      id: context.params.id,
    },
  };
}
