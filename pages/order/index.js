import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import Navbar from '../../components/Navbar';
import { Col, Container, Row, Card, Image } from 'react-bootstrap';
import Footer from '../../components/Footer';
import { getData } from '../../utils/fetchData';
import moment from 'moment';
import Cookies from 'js-cookie';
import Link from 'next/link';

export default function OrderPage() {
  const [dataTransaksi, setDataTransaksi] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      const token = Cookies.get('token');
      try {
        const res = await getData(`/api/v1/transaksi`, {}, token);
        setDataTransaksi(res.data);

        setIsLoading(false);
      } catch (err) {
        setIsLoading(false);
      }
    };

    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Semina || Landing Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="bg-navy">
        <Navbar />
      </header>
      <section className="bg-dark">
        <Container className="py-5">
          {isLoading || !dataTransaksi ? (
            <div
              className="d-flex justify-content-center align-items-center"
              style={{ height: '200px' }}
            >
              <div className="spinner-border text-primary" role="status">
                <span className="visually-hidden">Loading...</span>
              </div>
            </div>
          ) : (
            <>
              {dataTransaksi.map((data) => (
                <div key={data._id} className="row">
                  <div className="col-12 col-md-10 mx-auto">
                    <div className="card mb-3 bg-white">
                      <div className="row">
                        <div className="col-4 col-md-2 col-lg-2 d-flex align-items-center">
                          <img
                            height={147}
                            width={125}
                            src={`${process.env.NEXT_PUBLIC_API}/${data?.komik?.image?.nama}`}
                            className="card-img-top"
                            alt={data.komik.judul}
                          />
                        </div>
                        <div className="col-8 col-md-10 col-lg-10">
                          <div className="card-body">
                            <h5 className="card-title">{data.komik.judul}</h5>
                            <p className="mb-2">
                              {moment(data.date).format('DD-MM-YYYY')}
                            </p>
                            <p className="mb-2">Rp. {data.komik.price} </p>
                            <p className="mb-2">
                              <span
                                className={`badge ${
                                  data.response_midtrans.transaction_status ===
                                  'pending'
                                    ? 'bg-warning text-dark'
                                    : data.response_midtrans
                                        .transaction_status === 'settlement'
                                    ? 'bg-success'
                                    : 'bg-danger'
                                }`}
                              >
                                {data.response_midtrans.transaction_status ===
                                'pending'
                                  ? 'Menunggu'
                                  : data.response_midtrans
                                      .transaction_status === 'settlement'
                                  ? 'Sukses'
                                  : 'Kadaluwarsa'}
                              </span>
                            </p>

                            <Link
                              href={`/mutasi/${data.response_midtrans.order_id}`}
                            >
                              <a className="stretched-link"></a>
                            </Link>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </>
          )}
        </Container>
      </section>

      <Footer />
    </>
  );
}

// export async function getServerSideProps(context) {
//   const req = await getData(`/api/v1/transaksi`, {}, context.req.cookies.token);

//   const res = req.data;

//   return {
//     props: { data: res },
//   };
// }
