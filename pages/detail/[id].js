/* eslint-disable react/no-unescaped-entities */
/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import Button from '../../components/Button';
import Footer from '../../components/Footer';
import Navbar from '../../components/Navbar';
import { useRouter } from 'next/router';
import { getData } from '../../utils/fetchData';
import moment from 'moment';
import { formatDate } from '../../utils/formatDate';
import Cookies from 'js-cookie';
import Link from 'next/link';

export default function DetailPage() {
  const router = useRouter();
  const { id } = router.query;

  const [isLoading, setIsLoading] = useState(true);

  const [idCustomer, setIdCustomer] = useState(Cookies.get('idUser'));
  const [customer, setCustomer] = useState('');
  const [komikUser, setKomikUser] = useState('');

  const [dataCustomer, setDataCustomer] = useState([]);
  const [dataChapter, setDataChapter] = useState([]);
  const [dataKomik, setDataKomik] = useState([]);
  const [dataGenre, setDataGenre] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const idUser = Cookies.get('idUser');
        if (idUser) {
          const resCustomer = await getData(`api/v1/customer/${idUser}`);
          setDataCustomer(resCustomer.data);
        }

        // Mengambil detail komik berdasarkan ID
        const resKomik = await getData(`api/v1/komik/${id}`);
        setDataKomik(resKomik.data);

        // Mengambil data chapter
        const resChapter = await getData('api/v1/chapter');
        setDataChapter(resChapter.data);

        // Mengambil data genre
        const resGenre = await getData('api/v1/genre');
        setDataGenre(resGenre.data);

        setIsLoading(false);
      } catch (err) {
        // Tangani kesalahan jika ada
        setIsLoading(false);
        return err
      }
    };
    if (id) {
      setIsLoading(true);
      fetchData();
    }
  }, [id]);

  const handleChapter = (chapterId, komikId, vendor, detailPageCustomer) => {
    const token = Cookies.get('token');
    if (!token) {
      console.log('TRUE1');
      return router.push('/signin');
    } else {
      if (dataKomik.price === 0) {
        console.log('TRUE2');
        router.push(`/baca/${chapterId}`);
      } else {
        detailPageCustomer.komik.map((item) => {
          item.value === komikId
            ? router.push(`/baca/${chapterId}`)
            : router.push(
                `/checkout/${id}?komikId=${komikId}&vendor=${vendor}`
              );
        });
      }
    }
  };

  const handleSubmit = (komikId, vendor) => {
    const token = Cookies.get('token');
    if (!token) {
      return router.push('/signin');
    } else {
      router.push(`/checkout/${id}?komikId=${komikId}&vendor=${vendor}`);
    }
  };

  return (
    <>
      <Head>
        <title>Semina || Detail Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      {isLoading ? (
        <div>Loading...</div>
      ) : (
        <>
          <div className="preview-image bg-navy text-center">
            <img
              src={`${process.env.NEXT_PUBLIC_API}/${dataKomik?.image?.nama}`}
              className="img-content"
              alt="semina"
            />
          </div>
          <div className="details-content container">
            <div className="d-flex flex-wrap justify-content-lg-center gap">
              <div className="d-flex flex-column description">
                <div className="headline">{dataKomik.judul}</div>
                <br />
                <div className="event-details">
                  <h6>Genre</h6>
                  {/* <p className="details-paragraph">{dataKomik.genre.nama}</p> */}
                  <h6>Rilis</h6>
                  <p className="details-paragraph">
                    {moment(dataKomik.rilis).format('DD-MM-YYYY')}
                  </p>
                  <h6>Sinopsis</h6>
                  <p className="details-paragraph">{dataKomik.sinopsis}</p>
                </div>
              </div>

              {dataKomik.price === 0 || komikUser === id ? null : (
                <div className="d-flex flex-column card-event">
                  <h6>Your Writer</h6>
                  <div className="d-flex align-items-center gap-3 mt-3">
                    <img
                      src={`${process.env.NEXT_PUBLIC_API}/${dataKomik?.vendor?.image?.nama}`}
                      alt="semina"
                      width="60"
                    />
                    <div>
                      <div className="speaker-name">
                        {dataKomik?.vendor?.nama}
                      </div>
                      <span className="occupation">
                        {dataKomik?.vendor?.role}
                      </span>
                    </div>
                  </div>
                  <hr />

                  <h6>Get Komik</h6>
                  <div>
                    <>
                      <div className="price my-3">
                        {dataKomik.price === 0 ? 'free' : `$${dataKomik.price}`}
                        <span>/person</span>
                      </div>
                      <div className="d-flex gap-3 align-items-center card-details">
                        <img src="/icons/ic-marker.svg" alt="semina" />{' '}
                        {dataKomik.vendor.role}
                      </div>
                      <div className="d-flex gap-3 align-items-center card-details">
                        <img src="/icons/ic-time.svg" alt="semina" />{' '}
                        {dataKomik.vendor.email}
                      </div>
                      <div className="d-flex gap-3 align-items-center card-details">
                        <img src="/icons/ic-calendar.svg" alt="semina" />{' '}
                        {dataKomik.vendor.nomor}
                      </div>

                      {dataKomik.stock !== 0 && (
                    <Button
                      variant={'btn-green'}
                      action={() =>
                        handleSubmit(
                          dataKomik._id,
                          dataKomik.vendor._id,
                          customer
                        )
                      }
                    >
                      Order Now
                    </Button>
                  )}
                    </>
                  </div>
                </div>
              )}
            </div>
          </div>
          {/* <section className="pb-5">
            <div className="container">
              <div className=" row gap-y">
                {detailPageChapter.map((data, index) => {
                  if (id === data.komik._id) {
                    return (
                      <div
                        className="col-lg-3 col-md-6 col-12 d-grid my-2"
                        key={index}
                      >
                        <Button
                          variant={'btn-green'}
                          action={() =>
                            handleChapter(
                              data._id,
                              dataKomik._id,
                              dataKomik.vendor._id,
                              detailPageCustomer
                            )
                          }
                        >
                          {data.judul}
                        </Button>
                      </div>
                    );
                  }
                })}
              </div>
            </div>
          </section> */}
        </>
      )}

      <Footer />
    </>
  );
}

// export async function getServerSideProps(context) {
// const { idUser } = context.req.cookies;
// let resCustomer = null; // Menetapkan null secara default

// if (idUser) {
//   const reqCustomer = await getData(`api/v1/customer/${idUser}`);
//   resCustomer = reqCustomer.data;
// }

//   const reqKomik = await getData(`api/v1/komik/${context.params.id}`);
//   const resKomik = reqKomik.data;

//   const reqChapter = await getData(`api/v1/chapter`);
//   const resChapter = reqChapter.data;

//   return {
//     props: {
//       dataKomik: resKomik,
//       detailPageChapter: resChapter,
//       detailPageCustomer: resCustomer,
//       id: context.params.id,
//     },
//   };
// }
