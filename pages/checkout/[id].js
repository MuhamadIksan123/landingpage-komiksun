/* eslint-disable @next/next/no-img-element */
import moment from 'moment';
import Head from 'next/head';
import Footer from '../../components/Footer';
import FormCheckout from '../../components/FormCheckout';
import Navbar from '../../components/Navbar';
import { getData } from '../../utils/fetchData';
import { formatDate } from '../../utils/formatDate';
import { useRouter } from 'next/router';

export default function Checkout({ detailPage }) {
  const router = useRouter();
  const { komikId } = router.query;

  console.log(detailPage);
  return (
    <>
      <Head>
        <title>Semina || Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      <section className="bg-navy">
        <div className="checkout container">
          <div className="text-center checkout-title">Invest In Yourself</div>

          <div className="event-details container d-flex flex-wrap justify-content-lg-center align-items-center gap-5">
            <img
              src={`${process.env.NEXT_PUBLIC_API}/${detailPage?.image?.nama}`}
              className="event-image"
              alt="semina"
            />
            <div className="d-flex flex-column gap-3">
              <h5>{detailPage.judul}</h5>

              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-marker-white.svg" alt="" />
                <span>{detailPage.jenis}</span>
              </div>
              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-time-white.svg" alt="" />
                <span> {moment(new Date()).format('HH.MM A')}</span>
              </div>
              <div className="d-flex align-items-center gap-3">
                <img src="/icons/ic-calendar-white.svg" alt="" />
                <span>{formatDate(new Date())}</span>
              </div>
            </div>
            <div className="total-price">
              Rp. {detailPage.price}
            </div>
          </div>

          {/* form */}
          <FormCheckout/>
        </div>
      </section>
      <Footer />
    </>
  );
}

export async function getServerSideProps(context) {
  const { token, idUser } = context.req.cookies;

  if (!token) {
    return {
      redirect: {
        destination: '/signin',
        permanent: false,
      },
    };
  }
  const reqCustomer = await getData(`api/v1/customer/${idUser}`);
  const resCustomer = reqCustomer.data;

  let komikUser;

  resCustomer.komik.map((item) =>
    item.value === context.params.id ? (komikUser = item.value) : null
  );
  if(komikUser === context.params.id) {
    return {
      redirect: {
        destination: `/detail/${context.params.id}`,
        permanent: false,
      },
    };
  }

  const req = await getData(`/api/v1/komik/${context.params.id}`);

  const res = req.data;
  return {
    props: { detailPage: res },
  };
}
